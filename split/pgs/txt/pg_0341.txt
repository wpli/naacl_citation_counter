browsers9 . We used the Chrome browser to dynamically compute the style of each DOM element and output it as inline style attributes. To achieve this we programmatically inserted a javascript snippet that inlines the computed style and saves the new version of the HTML on the local file system utilizing the HTML5 saveAs interface10 . We then normalized the style attribute values for font size, RGB color, and Y coordinate as described in the following sections. 3.4 Text Categorization

The text categorization task involves labeling all flyers with appropriate transaction types and property types as shown in Table 1. This is a multi-label classification task as in all cases a flyer can have more than one label (e.g. Transaction Type: sale, lease; Property Type: retail, office). We applied a supervised Machine Learning approach to the task utilizing Support Vector Machines (SVM) (Vapnik, 2000) using the LibSVM library (Chang and Lin, 2011). SVM was a sensible choice as it has been shown to be one of the top performers on a number of text categorization tasks (Joachims, 1998; Yang and Liu, 1999; Sebastiani, 2002). Category information such as the transaction type and property type are one of the key pieces of information in a flyer. However, they are not always explicitly mentioned in the flyer and in some cases the data entry person needs to read the full content of the flyer to infer the property type. For example, an industrial property might be inferred by a mention of a particular zoning category and description of loading docks; a retail property type might be inferred by mentions of retail neighbors (e.g. Staples, Bed Bath and Beyond, etc) and traffic counts; an investment property type can be inferred by description of NOI (net operating income) and Cap Rates (the ratio between the NOI and capital cost of a property), etc. At the same time, when present, terms indicating the transaction and property types typically appear prominently in large fonts. For example, the propWe attempted to use an HTML renderer from the Cobra java toolkit http://lobobrowser.org/cobra.jsp to compute HTML style attributes. However, this renderer produced poor results on our dataset and failed to accurately compute the pixel location of text elements. 10 https://github.com/eligrey/FileSaver.js
9

erty type of the flyer shown on Figure 1 is prominently shown in large font (Restaurant indicates retail property type). Similarly, the transaction type of the flyer shown on Figure 2 is again prominently displayed in a large font (For Sale). The classifiers could then benefit from both the full text of the flyers, combined with some information of the visual prominence of individual words. We used `bag-of-words' representation (token unigrams) and modeled the task as a binary classification for each category label. As a term weighting scheme, we first used TF-IDF as one of the most common weighting schemes used for term categorization (Lan et al., 2005; Soucy and Mineau, 2005). This served as a performance baseline. To account for visually prominent characteristics of important document terms we also introduced a term weight that takes into account the relative font size of the term. As a measure of the relative font size, we used the percentile rank of the term font size, compared to all term font sizes in the document. For example, a weight of 0.9 is assigned to terms whose font size is greater than 90% of all tokens within the current document. The font size percentile was then used as a term weighting scheme (instead of TF-IDF). Table 3 summarizes the results of 5-fold cross validation using the full dataset of 2,269 flyers. We used a linear kernel model with the default parameters.
Property type Transaction type P R F P R F TF-IDF 79.57 85.27 82.32 87.56 92.87 90.14 Font Size Pctl 85.04 84.16 84.6 89.64 94.60 92.05

Table 3: Results from applying SVM on the task of identifying flyer Property Types (retail, office, industrial, land, multi-family) and Transaction Types (sale, lease, investment). We used `bag-of-words' representation (unigrams) applying two different term weight schemes: TFIDF and the relative percentile rank of the term font size. P=precision, R=recall, F=f1 score.

In both text categorization tasks the Font Size Percentile term weight significantly outperformed the TF-IDF term weight scheme11 .
The difference is statistically significant with p value < 0.05% using Z-test on two proportions.
11

287

