Specifically, Li et al. (2012) observe that, with a few exceptions, a Chinese verb constructed out of a basic verb bv possesses one of six main verb structures: (1) bv (e.g.,  (arrest)); (2) bv + verb (e.g.,  (deliver), where bv is ); (3) verb + bv (e.g.,  (leave), where bv is ); (4) bv + complementation (e.g.,  (enter), where bv is ); (5) bv + noun/adjective (e.g.,  (shoot), where bv is ); (6) noun/adjective + bv (e.g.,  (slight wound), where bv is ). Now, assuming that t1 and t2 are two lexically different trigger words containing the same BV (bv ), we say that their verb structures (denoted as vs1 and vs2 ) are incompatible if one of the following conditions is satisfied: (1) bv appears in different positions in t1 and t2 (e.g.,  (shoot) and  (leave), where bv is ); (2) both vs1 and vs2 have bv + verb or verb + bv as their verb structure (e.g.,  (deliver) and  (reach), where bv is ); or (3) both vs1 and vs2 have noun/adjective + bv or bv + noun/adjective as their verb structure (e.g.,  (slight wound) and  (severe wound), where bv is ). Note that these three incompatibility conditions encode our commonsense knowledge of when two Chinese verbs having the same BV cannot have the same meaning. Next, we explain how we compute the similarity between two trigger words in condition 3. To capture their semantic similarity, we first apply word2vec (Mikolov et al., 2013) to the Chinese Gigaword corpus (Parker et al., 2009) to obtain a vector representation of each word and then compute the cosine similarity between the two word vectors. Feature 2, our second trigger-based feature, encodes whether two nominal event mentions are incompatible w.r.t. number. Specifically, its value is True if and only if (1) c and e are both nouns, and (2) one is singular and the other is plural. Intuitively, this feature encodes a non-coreference condition. 5.2 Argument-Based Features

codes a non-coreference condition: c and e cannot be coreferent if such arguments exist. Feature 4 can be viewed as a generalized version of Feature 3, encoding whether c and e possess two arguments that have the same semantic role but are not coreferent. Feature 5 encodes whether c and e possess two named entity (NE) arguments that both have Value as their NE type but are lexically different. Such event mentions have a good chance of being not coreferent. 5.3 Distance Feature We employ one distance feature (Feature 6) that encodes how far c and e are apart from each other in terms of the number of event mentions. To reduce data sparseness during parameter estimation, however, we quantize the distance as follows. Let d be the distance between the first event mention and the last event mention in the document for which the distance feature will be computed. Note that the distance between an arbitrary pair of event mentions in this document will be between 0 and d. We divide the interval [0,d] into four equal-sized regions, and set the value of the distance feature based on which of the four bins it falls into. 5.4 Features for Dummy Candidates Now that we can compute the aforementioned six features for a non-dummy candidate antecedent, we next specify how we compute these features for a dummy candidate antecedent d of active event mention e. For Feature 1, we set the feature value of d to True, whereas for Features 2-5, we set the feature value of d to False. To understand why these values are chosen, note that for each of these features the opposite value could be a strong indicator of non-coreference, potentially causing the model to have an overly strong bias against selecting d as the antecedent of e. Finally, to compute Feature 6, we assume that d is the zero-th event mention of the associated document, and then compute the distance feature in the same way as described above. By letting d be the zero-th event mention, we make the probability of picking d as the correct antecedent (the probability of
types, i.e., Person, Organization, GPE, Facility, and Location.

We employ three argument-based features (Features 3-5), all of which are binary-valued and are computed based on c's and e's arguments. Feature 3 encodes whether c and e possess two arguments that have the same semantic role but different semantic classes.1 Intuitively, Feature 3 en1

The possible semantic classes are the ACE 2005 entity

1102

