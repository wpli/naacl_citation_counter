w1 create create create created creation creation recreations recreations recreations

w2 created creates creates create create created recreate recreating Recreations

rank 0 0 1 0 0 0 2 1 81

cosine 0.58 0.65 0.62 0.65 0.52 0.54 0.59 0.53 0.64

transformation suffix: :d:dethrone suffix:te:tes:evaluate suffix: :s:contradict suffix:ed:eeroded suffix:ion:e:communication suffix:ion:ed:disruption suffix:ions:e:translations suffix:ions:ing:constructions prefix:r:R:remediation

Table 2: Examples of lexicalized morphological transformations evaluated in E n using rank and cosine.

Generate lexicalized morphological transformations The results in Table 1 indicate the need for creating lexicalized transformations. For instance, rule suffix:ly: (drop suffix ly, a perfectly reasonable morphological transformation in English) is evaluated to have a hit rate of 32.1%. While such transformations are desirable, we want to avoid applying them when firing without yielding meaningpreserving results (the rest of 67.9%), e.g., for wordpair (only, on). We therefore create lexicalized transformations by restricting the rule application to the vocabulary subset of V which passes the meaningpreservation criterion. The algorithm also computes best direction vectors dw for each rule support set Sr . It greedily selects a direction vector dw0 that explains (based on Equation 1) the most pairs in Sr . After subset w0 is computed for direction vector d , it apSr w0 w0 . This yields a new plies recursively on set Sr - Sr best direction vector dw1 , and so on. The recursion stops when it finds a direction vector dwk that explains less than a predefined number of words (we used 10 in all the experiments from this paper). We consider multiple direction vectors dwi because of the possibly-ambiguous nature of a morphological transformation. Consider rule suffix: :s, which can be applied to the noun walk to yield plural-noun walks; this case is modeled with a transformation like walk + dinvention , since dinvention =inventions-invention is a direction that our procedure deems to explain well noun pluralization; it can also be applied to the verb walk 1630

to yield the 3rd-person singular form of the verb, in which case it is modeled as walk + denlist , since denlist =enlists-enlist is a direction that our procedure deems to explain well 3rd-person singular verb forms. In that sense, our algorithm goes beyond proposing simple surface-level morphemes, with direction vectors encoding well-defined semantics for our morphological analysis. Lexicalized rules enhanced with direction vectors are called morphological transformations. For each morphological transformation, we evaluate again how well it passes a proximity test in E n for the words it applies to. As evaluation criteria, we use two instances of Eq 1, with FE instantiated to rankE and cosineE , respectively. We apply more stringent criteria in this second pass, using thresholds on the resulting rank (trank ) and cosine (tcosine ) values to indicate meaning preservation (we used trank = 30 and tcosine = 0.5 in all the experiments in this paper). We present in Table 2 a sample of the results of this procedure. For instance, word create can be transformed to creates using two different transformations: suffix:te:tes:evaluate and suffix: :s:contradict, passing the meaning-preservation criteria with rank=0, cosine=0.65, and rank=1, cosine=0.62, respectively. Lexicalized morphological transformations over a vocabulary V have a graph-based interpretation: words represent nodes, transformations represent edges in a labeled, weighted, cyclic, directed multigraph (weights are (r, c) pairs, rank and cosine values; multiple direction vectors create multiple edges between two nodes; cycles may exist, see

