S2

S3 S1
S1

S2

S2

S3

S3

S1 S1

S1

S2 S2

S2

S3 S3

S3

e1 e2 e1 e2 e1 e3 e1 e3 e4 e5 e4 e5 S1 S2 S3 S1 S2 S3 e1 e2
e1

S

S1

S2

S3

S

e1 e2

e3 e1

e4 e3

e5 e4

SS 1

e5

S2

(a) Traditional entity graph relying on entity matching
S1
S1

(b) Traditional sentence graph converted from (a)
S1 S1
S1

S3

S2

S2

S3

S3

S2 S2

S2

S3 S3

S3

e1 e2 e1 e2 e1 e3 e1 e3 e4 e5 e4 e5 S1 S2 S3 S1 S2 S3

S1

S2

S3

(c) Our entity graph encoding relatedness between entities

e1

e2

e1

e2 e1

e3 e1

e3 e4

e5 e4

e5

(d) Our sentence graph converted from (c)

Figure 2: (a) and (b) show the traditional entity and sentence graph based on matching multiple mentions of the same entity; while (c) and (d) represent our entity and sentence graph encoding semantic relatedness between those semantically related but not necessarily coreferential entities (e.g., Gates and Microsoft ) by S1 S2 S3 adding world-knowledge edges (dashed lines) accroding to world knowledge (e.g., Gates-create-Microsoft).
S1 S2 S3

how we capture semantic relatedness by encoding world knowledge to the graph-based model. The outline of our method is as follows. Given a document d, we first retrieve relevant world knowledge from multiple sources (see Section 3). Then, we construct an entity graph with world knowledge to capture both the distribution information and semantic relatedness between entities (see Section 4.1.1). After that, we convert the entity graph into a sentence graph (see Section 4.1.2), in which two sentences are connected not only through common entities but also through world knowledge. Finally, we apply our novel reachability score computation over the sentence graph to produce a coherence score for the text to be evaluated (see Section 4.1.3). 4.1.1 Entity graph

As shown in Figure 2c, there are two kinds of edges in our entity graph: (1) common-entity edges (solid lines), which connect different mentions of the same entity, such as Gates in s1 and Gates in s2 ; (2) world-knowledge edges (dashed lines), which connect different entities through certain world knowledge, such as Gates in s2 and Microsoft in s3 related by Gates-create-Microsoft. This representation captures not only the distribution information of individual entities but also the semantic relatedness between different entities. In contrast, the original graph-based model by G&S (Figures 2a and 2b) includes common-entity edges only and misses the semantic relatedness information. Formally, for a document d, we define its entity graph as G = (V, Lm , Lk , Wm , Wk ), where V denotes the nodes of 1090

entities; Lm denotes the set of common-entity edges and Lk denotes the set of world-knowledge edges; and Wm and Wk are the two sets of weights associated with Lm and Lk respectively. Following G&S, for each common-entity edge lm  Lm , which connects two mentions of the same entity e appearing in different sentences s x and sy , we compute its weight as w(e, s x ) × w(e, sy ), where the value of w(e, s x ) is based on the grammatical role of the entity e in the sentence s x as follows: 3 for subject (S ), 2 for object (O), 1 for other (X ), and 0 for nothing(-). When multiple mentions of the same entity appear with different grammatical roles in the same sentence, the role with the highest weight is chosen to represent the entity. For each world-knowledge edge lk  Lk , which connects two different entities eix and e jy appearing in sentence s x and sy respectively, we consider three factors when assigning the weight to the edge: (1) semantic relatedness between eix and e jy : higher relatedness leads to a higher weight; (2) the grammatical roles of eix and e jy in s x and sy : different roles correspond to different weights; and (3) textual distance between eix and e jy : longer distance results in a lower weight. Therefore we compute the weight of lk between eix and e jy as below: wk (eix , e jy ) = r(ei , e j ) × w(eix , s x ) × w(e jy , sy ) , (2) d(eix , e jy ) × 2

where w(eix , s x ) is associated to the grammatical role of eix in s x as illustrated before; d(eix , e jy ) is the distance between eix and e jy ; and r(ei , e j ) is the semantic relatedness between eix and e jy as shown in For-

