pear in a question-answer statement, and support concepts appear in a S CITEXT support sentence. 2.2 Relations A relation is any pair of concepts that represents a semantic correspondence. In general, relations can be labeled with any feature that describes the correspondence, such as a particular type. For example, the relation between Obama and Hawaii can be labeled with the type born-in. A predetermined ontology is typically required to label relations with their type. In this work we label acquired relations with dialog-specific features. Our thesis is that user explanations intend to relate concepts together, and the system's task is to determine the user's intent. For example, the user utterance U: it's melting because of heat relates the concepts represented by melt[ing] and heat, with the words because of appearing between the two concept keywords. We refer to because of as the relation's intext. Relations can be intuitively arranged as a knowledge graph, which in this work is any graph whose nodes are concepts and whose edges are relations between those concepts, in the spirit of semantic networks such as ConceptNet (Havasi et al., 2007). 2.3 Sentence alignment We calculate the alignment score  between the ith question-answer statement Qi and its j th supporting S CITEXT sentence Si,j as the normalized number of relations between their concepts, (Qi , Si,j ) = RQi ,Si,j , CQi  CSi,j (1)

over a single dialog. Section 3.1 details how knowledge is extracted from user explanations without a dialog model. Section 3.2 describes dialog strategies that elicit natural language explanations. K NOWBOT uses task progress to drive natural language understanding. It assumes the user intends to provide one or more novel relations, and uses the constraints described in section 3.1.1 to disambiguate noisy relations. This way, K NOWBOT knows when the dialog progresses because its confidence in the user's chosen answer increases. 3.1 Building knowledge graphs from dialog K NOWBOT builds KGs at three levels: per utterance, per dialog, and globally over all dialogs. An utterance-level knowledge graph (uKG) (Figure 2a) is a fully connected graph whose nodes are all concepts in an utterance. After aggressive pruning (section 3.1.1), remaining edges update a dialog-level knowledge graph (dKG) (Figure 2b; section 3.1.2). Upon dialog termination, the dKG updates the global knowledge graph (gKG), which stores relations acquired from all dialogs (section 3.1.3). 3.1.1 Utterance-level KGs K NOWBOT initially relates every pair of concepts in an utterance, then prunes them based on two constraints: alignment and adjacency. Each user explanation is first converted into a fully-connected utterance-level knowledge graph. This uKG is noisy because users don't intend relations between every pair of keywords in their utterance. For example, a typical utterance U: freezes means it changes water from a liquid to a solid mentions six concepts, freezing, meaning, change, water, liquid, solid, with 6 2 potential binary relations. Not every relation is salient to the question. To remove noisy relations, edges in the uKG are aggressively pruned with two simple, rational constraints: 1. Alignment. An edge can only relate a question concept to a support concept. 2. Adjacency. Edges can't relate concepts whose keywords are adjacent in the utterance. The intuition for the alignment constraint is that the user intends each explanation to relate the question

where CQi is the set of concepts in Qi , CSi,j is the set of concepts in Si,j , and RQi ,Si,j is the number of relations between CQi and CSi,j . Normalized relation count is a practical semantic similarity score that generalizes to different knowledge representations. The dialog in Figure 2 aligns Q(D) with the S CITEXT fact S by learning from the user that, for example, heat is related to melting.

3

The K NOWBOT dialog system

K NOWBOT grows a knowledge graph of commonsense semantic relations in open, conversational dialog. Figure 2 traces the growth of a knowledge graph 853

