· popSim: We use the Freebase popularity as an alternative similarity measure. The Freebase popularity is a function of entity's incoming and outgoing link counts in Wikipedia and Freebase.1 3.2 Edges

Edges in our graph model represent relations between candidates. We insert an edge between two candidates if the Wikipedia entry corresponding to either of the two candidates contains a link to the other candidate. We assume that this relation is bidirectional and thus this edge is undirected. There is a toy document graph in Figure 1 with three entity mentions and seven candidates: three candidates generated for Lincolnshire, and two candidates generated for United F.C. and Devon White each. Each graph node e(m, c) is a pair of an entity mention m and a candidate c; every node is assigned an initial score, normalized across all candidates for the same entity. An edge is drawn between two candidates for different entities whenever there is a link from the Wikipedia page for one candidate to the Wikipedia page for another. There is no edge between candidates competing for the same entity.

port probability) we jump to a randomly selected node on a graph, and with probability 1 - we follow a random outgoing edge of the current node. Stationary distribution of this walk gives PageRank weights associated with each node. Personalized PageRank is the same as PageRank, except that all teleports are made to the same source node, for which we are personalizing the PageRank. 4.2 Coherence and Constraints The coherence of the node e to the graph G quantifies how well node e "fits" into this graph. Intuitively, pairwise weights P P R(s  e) represent relationships between nodes in the graph: the higher the weight is, the more relevant endpoint e is for the source s. Candidate nodes in the graph have different quality, measured by their initial similarity iSim. Thus, coherence of the node e to the graph G due to the presence of node s is given by cohs (e) = P P R(s  e) · iSim(s), (1)

4

The Challenge

A successful entity disambiguation algorithm would benefit from both the initial similarity between candidate and entity, as well as the coherence among entities in the same document. We assume that every entity can refer to at most one in the list of possible candidates, so all candidates except for the correct one for each entity are erroneous and will introduce noise into the document graph. Based on this observation, we contend that the typical random walk approach, which computes coherence of one candidate to the whole graph, is not suitable for our scenario. To address this problem, we propose to consider pairwise relations between every two nodes, given by PPR scores, compute the contribution of every node to the coherence of the other, and impose aggregation constraints to avoid redundant contributions. 4.1 Personalized PageRank The PageRank algorithm considers random walk on a graph, where at each step with probability (tele1

where relevance e for s is weighted by the iSim(s), which is the similarity between entity e and candidate s. We experiment with a MaxEnt-trained local score and the Freebase popularity as the iSim in Section 5. We observe that summing the contributions cohs (e) for all nodes s  V would accumulate noise, and therefore impose two aggregation constraints to take into account this nature of document graph G. Namely, to compute coherence coh(e) of the node e(m, c), corresponding to the entity mention m and the candidate c, to the graph G we enforce: (c1) ignore contributions from candidate nodes competing for an entity m; (c2) take only one, highest contribution from candidate nodes, competing for an entity m = m; The first constraint (c1) means that alternative candidates e ¯(m, c ¯), generated for the same entity mention m, should not contribute to the coherence of e(m, c), as only one candidate per entity can be correct. For the same reason the second constraint (c2) picks the single candidate node s(m , c ) for entity m = m with the highest contribution cohs (e) towards e. So these constraints guarantee that exactly one and the most relevant candidate per entity will contribute

https://developers.google.com/freebase/v1/search

240

